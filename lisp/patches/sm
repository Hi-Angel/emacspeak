diff --git a/.elpaignore b/.elpaignore
new file mode 100644
index 000000000..bbd94b5ee
--- /dev/null
+++ b/.elpaignore
@@ -0,0 +1,4 @@
+contrib
+tvr
+obsolete
+utils
diff --git a/.gitignore b/.gitignore
index 7adf965b9..c3021a080 100644
--- a/.gitignore
+++ b/.gitignore
@@ -25,3 +25,8 @@ servers/native-espeak/tclespeak.so
 /.ccls-cache/
 *.pdf
 **.pdf
+
+# ELPA-generated files
+/emacspeak-autoloads.el
+/emacspeak-pkg.el
+/lisp/emacspeak-autoloads.el
diff --git a/lisp/Makefile b/lisp/Makefile
index 65302d74e..7899268f5 100644
--- a/lisp/Makefile
+++ b/lisp/Makefile
@@ -319,7 +319,6 @@ emacs -batch -q \
 # {{{build time target --loaddefs
 
 emacspeak-loaddefs.el: 
-	@echo ";;;Auto generated" > emacspeak-loaddefs.el
 	$(EMACS) $(BATCH)  -l ./emacspeak-preamble.el  \
 	-l ./emacspeak-autoload.el  \
 	-f emacspeak-auto-generate-autoloads
diff --git a/lisp/amixer.el b/lisp/amixer.el
index f75a8b6bf..5706feea0 100644
--- a/lisp/amixer.el
+++ b/lisp/amixer.el
@@ -44,6 +44,7 @@
 ;;{{{ required packages
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 
 ;;}}}
diff --git a/lisp/dectalk-voices.el b/lisp/dectalk-voices.el
index d7fc35d28..8363cf182 100644
--- a/lisp/dectalk-voices.el
+++ b/lisp/dectalk-voices.el
@@ -49,6 +49,7 @@
 ;;{{{ required modules
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 
 ;;}}}
@@ -374,7 +375,6 @@ and TABLE gives the values along that dimension."
   (setq tts-default-voice 'paul)
   (fset 'tts-voice-defined-p 'dectalk-voice-defined-p)
   (fset 'tts-get-voice-command 'dectalk-get-voice-command)
-  (fset 'tts-voice-defined-p 'dectalk-voice-defined-p)
   (fset 'tts-define-voice-from-speech-style 'dectalk-define-voice-from-speech-style)
   (setq tts-default-speech-rate dectalk-default-speech-rate)
   (set-default 'tts-default-speech-rate dectalk-default-speech-rate)
diff --git a/lisp/dtk-speak.el b/lisp/dtk-speak.el
index 4e8536242..e75190057 100644
--- a/lisp/dtk-speak.el
+++ b/lisp/dtk-speak.el
@@ -1429,8 +1429,11 @@ Set by \\[dtk-set-punctuations].")
 ;;}}}
 ;;{{{  interactively selecting the server:
 
-;;; will be reset on a per TTS engine basis.
-(fset 'tts-get-voice-command 'dectalk-get-voice-command)
+;; These functions will be reset on a per TTS engine basis
+;; via `voice-setup' called by `dtk-initialize'.
+(defalias 'tts-get-voice-command (lambda (&rest _) ""))
+(defalias 'tts-define-voice-from-speech-style #'ignore)
+(defalias 'tts-voice-defined-p (lambda (&rest _) t))
 
 (defun tts-voice-reset-code ()
   "Return voice reset code."
@@ -1565,9 +1568,10 @@ Set to nil to disable a separate Notification stream."
 
 (defun dtk-initialize ()
   "Initialize speech system."
-  (cl-declare (special dtk-speaker-process
-                       dtk-speak-server-initialized
-                       dtk-program))
+  ;; `voice-setup' requires us, so we can't require it at top-level.
+  (require 'voice-setup)
+  (declare-function voice-setup "voice-setup" ())
+  (voice-setup)
   (let* ((new-process (dtk-make-process "Speaker"))
          (state (process-status new-process)))
     (setq dtk-speak-server-initialized (memq state '(run open)))
@@ -1722,10 +1726,12 @@ unless   `dtk-quiet' is set to t. "
 
 (defmacro ems-with-messages-silenced (&rest body)
   "Evaluate body  after temporarily silencing messages."
-  (declare (indent 1) (debug t))
-  `(let ((emacspeak-speak-messages nil)
+  (declare (indent 0) (debug t))
+  `(progn
+     (defvar emacspeak-speak-messages)
+     (let ((emacspeak-speak-messages nil)
          (inhibit-message t))
-     ,@body))
+     ,@body)))
 
 (defun dtk-speak-and-echo (message)
   "Speak message and echo it."
diff --git a/lisp/emacspeak-autoload.el b/lisp/emacspeak-autoload.el
index c25fd53a3..cb908bcb7 100644
--- a/lisp/emacspeak-autoload.el
+++ b/lisp/emacspeak-autoload.el
@@ -63,9 +63,10 @@
 ;;}}}
 ;;{{{ generate autoloads
 
+(defvar dtk-quiet)
+
 (defun emacspeak-auto-generate-autoloads ()
   "Generate emacspeak autoloads."
-  (cl-declare (special  emacspeak-auto-autoloads-file ))
   (let ((dtk-quiet t)
         (generated-autoload-file emacspeak-auto-autoloads-file))
     (update-directory-autoloads (file-name-directory emacspeak-auto-autoloads-file))))
diff --git a/lisp/emacspeak-muggles.el b/lisp/emacspeak-muggles.el
index d44c0e48b..c171db8a6 100644
--- a/lisp/emacspeak-muggles.el
+++ b/lisp/emacspeak-muggles.el
@@ -87,8 +87,9 @@
 (require 'emacspeak-preamble)
 
 (eval-when-compile
-  (when (locate-library "package")
-    (unless (locate-library "hydra") (package-install 'hydra)))
+  ;; FIXME: Network access as part of compilation is EVIL!
+  ;; (when (locate-library "package")
+  ;;   (unless (locate-library "hydra") (package-install 'hydra)))
   
   (require 'emacspeak-hydra)
   (require 'org)
@@ -102,7 +103,7 @@
   (require 'xbacklight)
   (require 'view)
   (require 'emacspeak-m-player))
-(require 'flycheck)
+(require 'flycheck nil t) ;; Don't burp if absent during compilation.
 (declare-function org-table-previous-row "emacspeak-org" nil)
 (declare-function emacspeak-org-table-speak-current-element
                   "emacspeak-org" nil)
diff --git a/lisp/emacspeak-outline.el b/lisp/emacspeak-outline.el
index e4edc22bd..856741b6a 100644
--- a/lisp/emacspeak-outline.el
+++ b/lisp/emacspeak-outline.el
@@ -106,7 +106,7 @@
 
 (defadvice outline-flag-region (around emacspeak pre act comp)
   "Reflect hide/show via property invisible as wel"
-  (cl-declare (special ems--voiceify-overlays))
+  (defvar ems--voiceify-overlays)
   (let  ((ems--voiceify-overlays  nil)
          (beg (ad-get-arg 0))
          (end (ad-get-arg 1))
@@ -301,7 +301,6 @@ except that the outline section is  spoken"
 
 (defadvice outline-up-heading (around emacspeak pre act comp)
   "Silence error messages."
-  (cl-declare (special emacspeak-speak-errors))
   (ems-with-errors-silenced
       ad-do-it
     ad-return-value))
diff --git a/lisp/emacspeak-preamble.el b/lisp/emacspeak-preamble.el
index 2b8f01409..f06e97621 100644
--- a/lisp/emacspeak-preamble.el
+++ b/lisp/emacspeak-preamble.el
@@ -43,15 +43,14 @@
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 (cl-pushnew (file-name-directory load-file-name) load-path :test #'string-equal)
 
-(cl-defstruct  acss
-  family average-pitch pitch-range stress richness)
-
 (eval-when-compile (require 'subr-x))
 (require 'advice)
 (setq ad-redefinition-action 'accept)
 
 ;;{{{  Define locations
 
+;; FIXME: Don't autoload variables unless there's a *really* clear need for it.
+
 ;;;###autoload
 (defvar emacspeak-directory
   (expand-file-name "../" (file-name-directory load-file-name))
diff --git a/lisp/emacspeak-pronounce.el b/lisp/emacspeak-pronounce.el
index 8b457d6ba..095c429c6 100644
--- a/lisp/emacspeak-pronounce.el
+++ b/lisp/emacspeak-pronounce.el
@@ -60,6 +60,7 @@
 ;;{{{ required Modules:
 
 (require 'cl-lib)
+(require 'emacspeak-sounds)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 ;;}}}
 ;;{{{ Dictionary structure:
@@ -299,6 +300,10 @@ Default is emacspeak-pronounce-dictionaries-file."
   (when (file-exists-p filename)
     (condition-case nil
         (progn
+          ;; `ems--fastload' is defined in `emacspeak-preamble' which requires
+          ;; us, so we can't require it at top-level.
+          (require 'emacspeak-preamble)
+          (declare-function ems--fastload "emacspeak-preamble" (file))
           (ems--fastload filename)
           (setq emacspeak-pronounce-dictionaries-loaded t))
       (error (message "Error loading pronunciation dictionary")))))
diff --git a/lisp/emacspeak-sounds.el b/lisp/emacspeak-sounds.el
index ff302109d..bc8696057 100644
--- a/lisp/emacspeak-sounds.el
+++ b/lisp/emacspeak-sounds.el
@@ -140,6 +140,10 @@ Do not set this by hand;
     (cond
      ((emacspeak-sounds-theme-get-extension theme-name) t)
      ((file-exists-p (expand-file-name "define-theme.el" theme-name))
+      ;; `ems--fastload' is defined in `emacspeak-preamble' which requires
+      ;; us, so we can't require it at top-level.
+      (require 'emacspeak-preamble)
+      (declare-function ems--fastload "emacspeak-preamble" (file))
       (ems--fastload (expand-file-name "define-theme.el" theme-name)))
      (t (error "Theme %s is missing its configuration file. " theme-name))))
 
diff --git a/lisp/emacspeak-speak.el b/lisp/emacspeak-speak.el
index 1c917ac02..3ff242405 100644
--- a/lisp/emacspeak-speak.el
+++ b/lisp/emacspeak-speak.el
@@ -56,8 +56,10 @@
 (require 'cl-lib)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 (require 'voice-setup)
+(require 'voice-defs)
 (require 'dtk-speak)
 (require 'emacspeak-pronounce)
+(require 'emacspeak-sounds)
 (require 'sox-gen)
 (declare-function emacspeak-play-auditory-icon "emacspeak-sounds" (sound-name))
 (declare-function operate-on-rectangle "rect" (function start end coerce-tabs))
@@ -349,7 +351,7 @@ Argument BODY specifies forms to execute."
 (defmacro ems-with-errors-silenced (&rest body)
   "Evaluate body  after temporarily silencing auditory error feedback."
   (declare (indent 1) (debug t))
-  `(let ((emacspeak-speak-errors nil)
+  `(let (;; (emacspeak-speak-errors nil) ;FIXME: Unused!
          (emacspeak-speak-messages nil))
      ,@body))
 
@@ -641,6 +643,10 @@ emacspeak-speak-filter-table)\n" k v)))
                        emacspeak-speak-filter-table
                        emacspeak-speak-filters-loaded-p))
   (unless emacspeak-speak-filters-loaded-p
+    ;; `ems--fastload' is defined in `emacspeak-preamble' which requires
+    ;; us, so we can't require it at top-level.
+    (require 'emacspeak-preamble)
+    (declare-function ems--fastload "emacspeak-preamble" (file))
     (ems--fastload emacspeak-speak-filter-persistent-store)
     (setq emacspeak-speak-filters-loaded-p t)
     (add-hook 'kill-emacs-hook 'emacspeak-speak-persist-filter-settings)))
@@ -2779,10 +2785,10 @@ This function is sensitive to calendar mode when prompting."
   "\C-p" 'emacspeak-minibuffer-previous-completion)
 (define-key 
 minibuffer-local-completion-map
- (ems-kbd "C-@")
+ (kbd "C-@")
  'emacspeak-minibuffer-choose-completion)
 (define-key minibuffer-local-completion-map
-  (ems-kbd "C-SPC") 'emacspeak-minibuffer-choose-completion)
+  (kbd "C-SPC") 'emacspeak-minibuffer-choose-completion)
 
 ;;}}}
 ;;{{{ Open Emacspeak Info Pages:
diff --git a/lisp/emacspeak-wizards.el b/lisp/emacspeak-wizards.el
index 252490422..eaf463101 100644
--- a/lisp/emacspeak-wizards.el
+++ b/lisp/emacspeak-wizards.el
@@ -57,6 +57,7 @@
   (require 'derived)
   (require 'let-alist))
 (require 'emacspeak-preamble)
+(require 'color)
 (eval-when-compile
   (require 'calendar)
   (require 'cus-edit)
diff --git a/lisp/emacspeak-xslt.el b/lisp/emacspeak-xslt.el
index a10e1e04c..0adc26fea 100644
--- a/lisp/emacspeak-xslt.el
+++ b/lisp/emacspeak-xslt.el
@@ -54,22 +54,18 @@
 (require 'emacspeak-preamble)
 ;;}}}
 ;;{{{  xslt Environment:
-;;;###autoload
 (defsubst emacspeak-xslt-get (style)
   "Return  stylesheet path."
   (expand-file-name style emacspeak-xslt-directory))
 
-;;;###autoload
 (defconst emacspeak-opml-view-xsl
   (eval-when-compile  (emacspeak-xslt-get "opml.xsl"))
   "XSL stylesheet used for viewing OPML  Feeds.")
 
-;;;###autoload
 (defconst emacspeak-rss-view-xsl
   (eval-when-compile  (emacspeak-xslt-get "rss.xsl"))
   "XSL stylesheet used for viewing RSS Feeds.")
 
-;;;###autoload
 (defconst emacspeak-atom-view-xsl
   (eval-when-compile  (emacspeak-xslt-get "atom.xsl"))
   "XSL stylesheet used for viewing Atom Feeds.")
@@ -94,7 +90,6 @@
    (read-file-name "XSL Transformation: "
                    emacspeak-xslt-directory
                    emacspeak-we-xsl-transform)))
-;;;###autoload
 (defvar emacspeak-xslt-program
   (executable-find "xsltproc")
   "Name of XSLT transformation engine.")
diff --git a/lisp/emacspeak.el b/lisp/emacspeak.el
index c36fb8efc..3f6f037c8 100644
--- a/lisp/emacspeak.el
+++ b/lisp/emacspeak.el
@@ -3,6 +3,8 @@
 ;;; $Author: tv.raman.tv $
 ;;; Description:  Emacspeak: A speech interface to Emacs
 ;;; Keywords: Emacspeak, Speech, Dectalk,
+;;; Version: 55.0
+;;; Package-Requires: ((emacs "26") (hydra "0.5"))
 ;;{{{  LCD Archive entry:
 ;;; LCD Archive Entry:
 ;;; emacspeak| T. V. Raman |tv.raman.tv@gmail.com
diff --git a/lisp/espeak-voices.el b/lisp/espeak-voices.el
index 31aafaac3..cfbbdb718 100644
--- a/lisp/espeak-voices.el
+++ b/lisp/espeak-voices.el
@@ -40,6 +40,7 @@
 ;;{{{ Required modules
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)           ;For `ems--fastload'.
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 ;;}}}
 ;;{{{ Customizations:
diff --git a/lisp/gm-nnir.el b/lisp/gm-nnir.el
index 122d9ecb6..a9c68629e 100644
--- a/lisp/gm-nnir.el
+++ b/lisp/gm-nnir.el
@@ -62,6 +62,7 @@
 ;;{{{  Required modules
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 (with-no-warnings (require 'nnir))
 (require 'gnus-group)
diff --git a/lisp/ladspa.el b/lisp/ladspa.el
index 896ee2116..835491774 100644
--- a/lisp/ladspa.el
+++ b/lisp/ladspa.el
@@ -282,7 +282,7 @@ list of parsed ladspa-plugin structures, one per label."
            ("e" ladspa-edit-control)
            )
          do
-         (define-key ladspa-mode-map (ems-kbd (cl-first k)) (cl-second k)))
+         (define-key ladspa-mode-map (kbd (cl-first k)) (cl-second k)))
 
 ;;}}}
 ;;{{{ Instantiate Ladspa Plugin:
diff --git a/lisp/mac-voices.el b/lisp/mac-voices.el
index 4a0dadd31..dc837f0a3 100644
--- a/lisp/mac-voices.el
+++ b/lisp/mac-voices.el
@@ -50,6 +50,7 @@
 ;;{{{ Required modules
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)           ;For `ems--fastload'.
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 
 ;;}}}
diff --git a/lisp/outloud-voices.el b/lisp/outloud-voices.el
index 632f7f8c3..6198d81d0 100644
--- a/lisp/outloud-voices.el
+++ b/lisp/outloud-voices.el
@@ -50,6 +50,7 @@
 ;;{{{ Required modules
 
 (require 'cl-lib)
+(require 'emacspeak-preamble)           ;For `ems--fastload'.
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 ;;}}}
 ;;{{{ Customizations:
diff --git a/lisp/plain-voices.el b/lisp/plain-voices.el
index 58b8e2dda..fc2c17fa1 100644
--- a/lisp/plain-voices.el
+++ b/lisp/plain-voices.el
@@ -48,6 +48,7 @@
 
 ;;; Code:
 (require 'cl-lib)
+(require 'emacspeak-preamble)           ;For `ems--fastload'.
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 
 ;;}}}
diff --git a/lisp/sox-gen.el b/lisp/sox-gen.el
index 5d9ba1a3f..43de51854 100644
--- a/lisp/sox-gen.el
+++ b/lisp/sox-gen.el
@@ -115,6 +115,7 @@
 ;;{{{  Required modules
 
 (require 'cl-lib)
+(require 'dtk-speak)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 
 
diff --git a/lisp/voice-setup.el b/lisp/voice-setup.el
index 0fa95238c..19366c586 100644
--- a/lisp/voice-setup.el
+++ b/lisp/voice-setup.el
@@ -97,6 +97,7 @@
 ;;{{{ Required modules
 
 (require 'cl-lib)
+(require 'dtk-speak)
 (cl-declaim  (optimize  (safety 0) (speed 3)))
 (eval-when-compile (require 'easy-mmode))
 
@@ -117,22 +118,29 @@
 ;;; Whenever we switch engines, we load voice-definitions for that
 ;;; engine by reloading module voice-defs.
 (cl-declaim (special dtk-program))
-(cond
- ((string-match "outloud" dtk-program)
-  (require 'outloud-voices)
-  (outloud-configure-tts))
- ((string-match "dtk" dtk-program)
-  (require 'dectalk-voices)
-  (dectalk-configure-tts))
- ((string-match "mac$" dtk-program)
-  (require 'mac-voices)
-  (mac-configure-tts))
- ((string-match "espeak$" dtk-program)
-  (require 'espeak-voices)
-  (espeak-configure-tts))
- (t
-  (require 'plain-voices)
-  (plain-configure-tts)))
+
+(cl-defstruct (acss
+               (:predicate nil) ;; Don't make a predicate we don't need.
+               (:copier nil))   ;; Don't make a copier we don't need.
+  family average-pitch pitch-range stress richness)
+
+(defun voice-setup ()
+  (cond
+   ((string-match "outloud" dtk-program)
+    (require 'outloud-voices)
+    (outloud-configure-tts))
+   ((string-match "dtk" dtk-program)
+    (require 'dectalk-voices)
+    (dectalk-configure-tts))
+   ((string-match "mac\\'" dtk-program)
+    (require 'mac-voices)
+    (mac-configure-tts))
+   ((string-match "espeak\\'" dtk-program)
+    (require 'espeak-voices)
+    (espeak-configure-tts))
+   (t
+    (require 'plain-voices)
+    (plain-configure-tts))))
 
 (defun voice-acss-from-speech-style (style)
   "Compute a  name for this STYLE.
diff --git a/sounds/3d/define-theme.el b/sounds/3d/define-theme.el
index 55cc2a945..5cd4a2254 100644
--- a/sounds/3d/define-theme.el
+++ b/sounds/3d/define-theme.el
@@ -1,5 +1,5 @@
 ;;; Sound theme generated using CSound to produce  spatially located icons.  -*- lexical-binding: t; -*-
-
+(require 'emacspeak-sounds)
 (emacspeak-sounds-define-theme
  (expand-file-name "3d/" emacspeak-sounds-directory)
  ".wav")
diff --git a/sounds/chimes/define-theme.el b/sounds/chimes/define-theme.el
index 1c89d6340..d5665bcb6 100644
--- a/sounds/chimes/define-theme.el
+++ b/sounds/chimes/define-theme.el
@@ -1,5 +1,6 @@
 ;;; Wave icons using chimes as a theme  -*- lexical-binding: t; -*- 
 
+(require 'emacspeak-sounds)
 (emacspeak-sounds-define-theme
  (expand-file-name "chimes/" emacspeak-sounds-directory)
  ".wav")
diff --git a/sounds/classic/define-theme.el b/sounds/classic/define-theme.el
index 779ae28ae..9c9e55c6c 100644
--- a/sounds/classic/define-theme.el
+++ b/sounds/classic/define-theme.el
@@ -1,4 +1,5 @@
 ;;; Default theme as 44.1K stereo  -*- lexical-binding: t; -*-
+(require 'emacspeak-sounds)
 (emacspeak-sounds-define-theme
  (expand-file-name "classic/" emacspeak-sounds-directory)
  ".wav")
diff --git a/sounds/pan-chimes/define-theme.el b/sounds/pan-chimes/define-theme.el
index 178bc2c59..7f41a5092 100644
--- a/sounds/pan-chimes/define-theme.el
+++ b/sounds/pan-chimes/define-theme.el
@@ -1,6 +1,7 @@
 ;;; Wave icons using chimes as a theme  -*- lexical-binding: t; -*-
 ;;; Icons from theme Chimes with effect autopan applied using mplayer and ladspa
 
+(require 'emacspeak-sounds)
 (emacspeak-sounds-define-theme
  (expand-file-name "pan-chimes/" emacspeak-sounds-directory)
  ".wav")

